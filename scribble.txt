// diffrent code snippets for testing and scribbles 

__mingw_ovr
__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
int fprintf (FILE *__stream, const char *__format, ...)
{
  int __retval;
  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
  __retval = __mingw_vfprintf( __stream, __format, __local_argv ); // THIS LINE
  __builtin_va_end( __local_argv );
  return __retval;
}

/*
printf("%s\n",tags[tagCount].name);
printf("%s\n",tags[tagCount].idS);
printf("%d\n",tags[tagCount].idD);
printf("%s\n",tags[tagCount].pass);
printf("%d\n",tags[tagCount].access);
printf("%s\n",tags[tagCount].createdTs);
printf("%s\n",tags[tagCount].changedTs);
*/
/*
printf("Timestamp: %s\n", tag->createdTs);
strncpy(tags[tagCount].name, tag->name, sizeof(tags[tagCount].name));
tags[tagCount].name[sizeof(tags[tagCount].name) - 1] = '\0';

strncpy(tags[tagCount].idS, tag->idS, sizeof(tags[tagCount].idS));
tags[tagCount].idS[sizeof(tags[tagCount].idS) - 1] = '\0';

tags[tagCount].idD = tag->idD;

strncpy(tags[tagCount].pass, tag->pass, sizeof(tags[tagCount].pass));
tags[tagCount].pass[sizeof(tags[tagCount].pass) - 1] = '\0';

tags[tagCount].access = tag->access;

strncpy(tags[tagCount].createdTs, tag->createdTs, sizeof(tags[tagCount].createdTs));
tags[tagCount].createdTs[sizeof(tags[tagCount].createdTs) - 1] = '\0';


strncpy(tags[tagCount].changedTs, tag->changedTs, sizeof(tags[tagCount].changedTs));
tags[tagCount].changedTs[sizeof(tags[tagCount].changedTs) - 1] = '\0';
*/


E | 6A 66 68 44 6D 4D 50 4E 25 41 73 34 38 4C 2A 6A

In hex:  EA 9E 1A 91

EA 9E 1A 91
ID EA 9E 1A 91 END

69 79 5A 45 71 77 6A 46 4D 23 68 36 5A 4A 28 73  END

A:!4Gh*7&pLGceK25$ï¿½!

A:7I

A:!4Gh*7&pL

:qanUrvdrz%C!tNg$;

:$n*KZr^IpbAwF9oD;

246E2A4B5A725E497062417746396F4455160000000000000000000000000000000000000000000000000000000000000000000000000000000000

3D4@E7s(4#JkVi
